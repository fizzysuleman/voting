{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\src\\\\Components\\\\Result.js\";\nimport React, { Component } from 'react';\nimport { Message, Card, Segment, Icon, Container, Label } from 'semantic-ui-react';\nimport firebaseConf from './Firebase';\n\nvar Result =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Result, _Component);\n\n  function Result() {\n    var _this;\n\n    _classCallCheck(this, Result);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Result).call(this));\n\n    _this.fetchAspirantsdata = function () {\n      firebaseConf.database().ref('posts').orderByChild('post').on('value', function (snapshot) {\n        var contestantsPost = [];\n        snapshot.forEach(function (data) {\n          contestantsPost.push({\n            id: data.val().id,\n            post: data.val().post,\n            aspirants: Object.entries(data.val().aspirants ? data.val().aspirants : []).map(function (e) {\n              return Object.assign(e[1], {\n                aspirantKey: e[0]\n              });\n            })\n          });\n\n          _this.setState({\n            contestantsPost: contestantsPost\n          });\n\n          _this.getVotes();\n        });\n      });\n    };\n\n    _this.getVotes = function () {\n      var votes = [];\n      var size = [];\n      var sizes = [0];\n\n      _this.state.contestantsPost.map(function (post) {\n        post.aspirants.map(function (aspirant, i) {\n          votes.push(Object.keys(aspirant.votes ? aspirant.votes : {}).length);\n        });\n        size.push(post.aspirants.length);\n      });\n\n      var x = 0;\n      size.forEach(function (element) {\n        x = x + element;\n        sizes.push(x);\n      });\n      var groups = votes.map(function (e, start) {\n        return votes.slice(sizes[start], sizes[start + 1]);\n      });\n\n      _this.setState({\n        groups: groups\n      });\n\n      console.log(votes);\n    };\n\n    _this.state = {\n      contestantsPost: [],\n      groups: []\n    };\n    return _this;\n  }\n\n  _createClass(Result, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchAspirantsdata();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      this.getVotes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var contestantsPost = this.state.contestantsPost;\n      console.log(this.state.groups);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, contestantsPost.map(function (item, index) {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Segment.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Message, {\n          danger: true,\n          attached: \"bottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }), item.post), item.aspirants.map(function (item, i) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(Segment.Group, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(Segment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, item.lastName + ' ' + item.firstName, \" \", React.createElement(Label, {\n            color: Math.max.apply(null, _this2.state.groups[index]) === (item.votes && Object.keys(item.votes).length) ? \"green\" : 'blue',\n            style: {\n              float: \"right\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, item.votes ? Object.keys(item.votes).length : \"0\"))));\n        })));\n      }))));\n    }\n  }]);\n\n  return Result;\n}(Component);\n\nexport default Result;","map":{"version":3,"sources":["C:\\Users\\Faizal\\Downloads\\e-voting\\src\\Components\\Result.js"],"names":["React","Component","Message","Card","Segment","Icon","Container","Label","firebaseConf","Result","fetchAspirantsdata","database","ref","orderByChild","on","snapshot","contestantsPost","forEach","data","push","id","val","post","aspirants","Object","entries","map","e","assign","aspirantKey","setState","getVotes","votes","size","sizes","state","aspirant","i","keys","length","x","element","groups","start","slice","console","log","item","index","lastName","firstName","Math","max","apply","float"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Message,Card, Segment, Icon, Container,Label} from 'semantic-ui-react';\r\nimport firebaseConf from './Firebase';\r\n\r\nclass Result extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      contestantsPost: [],\r\n      groups:[]\r\n      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAspirantsdata();\r\n  }\r\n  componentWillReceiveProps(){\r\n    this.getVotes()\r\n  }\r\n  fetchAspirantsdata = () => {\r\n    firebaseConf\r\n      .database()\r\n      .ref('posts')\r\n      .orderByChild('post')\r\n      .on('value', snapshot => {\r\n        const contestantsPost = [];\r\n        snapshot.forEach(data => {\r\n          contestantsPost.push({\r\n            id: data.val().id,\r\n            post: data.val().post,\r\n            aspirants: Object.entries(\r\n              data.val().aspirants ? data.val().aspirants : []\r\n            ).map(e => Object.assign(e[1], {aspirantKey: e[0]})),\r\n          });\r\n          this.setState({contestantsPost});\r\n          this.getVotes()\r\n        });\r\n      });\r\n  };\r\n\r\n  getVotes=()=>{\r\n    var votes=[]\r\n    var size=[]\r\n   var sizes=[0]\r\n   this.state.contestantsPost.map((post)=>{\r\n      post.aspirants.map((aspirant, i)=>{\r\n        votes.push(Object.keys(aspirant.votes?aspirant.votes:{}).length)\r\n        \r\n      })\r\n      size.push(post.aspirants.length)\r\n    })\r\n    \r\n    var x=0\r\n    size.forEach(element => {\r\n       x=x+element\r\n       sizes.push(x)\r\n     });\r\n\r\n    var groups = votes.map(function (e, start) {\r\n        return votes.slice(sizes[start], sizes[start+1])\r\n    })\r\n\r\n    this.setState({groups})\r\n    console.log(votes)\r\n\r\n  }\r\n\r\n  render() {\r\n    const {contestantsPost} = this.state;\r\n    console.log(this.state.groups)\r\n    return (\r\n      <div>\r\n        <Container >\r\n        <Card.Group centered>\r\n          \r\n          {contestantsPost.map((item,index) => {\r\n            return (\r\n              \r\n              <Card>\r\n              <Segment.Group>\r\n                <Message danger attached='bottom'>\r\n                <Icon name='user' />\r\n                {item.post}\r\n              </Message>\r\n                {item.aspirants.map((item, i) => (\r\n                  <div>\r\n                    <Segment.Group>\r\n                      <Segment>{item.lastName + ' ' + item.firstName} <Label color={Math.max.apply(null, this.state.groups[index])===(item.votes && Object.keys(item.votes).length)?\"green\":'blue'} style={{float:\"right\"}}>{item.votes?Object.keys(item.votes).length:\"0\"}</Label></Segment>\r\n                    </Segment.Group>\r\n                  </div>\r\n                ))}\r\n              </Segment.Group>\r\n              </Card>\r\n            );\r\n          })}\r\n          \r\n        </Card.Group>\r\n        </Container>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;"]},"metadata":{},"sourceType":"module"}