{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\src\\\\Components\\\\Result.js\";\nimport React, { Component } from 'react';\nimport { Message, Card, Segment, Icon, Container, Label } from 'semantic-ui-react';\nimport firebaseConf from './Firebase';\n\nvar Result =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Result, _Component);\n\n  function Result() {\n    var _this;\n\n    _classCallCheck(this, Result);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Result).call(this));\n\n    _this.fetchAspirantsdata = function () {\n      firebaseConf.database().ref('posts').orderByChild('post').on('value', function (snapshot) {\n        var contestantsPost = [];\n        snapshot.forEach(function (data) {\n          contestantsPost.push({\n            id: data.val().id,\n            post: data.val().post,\n            aspirants: Object.entries(data.val().aspirants ? data.val().aspirants : []).map(function (e) {\n              return Object.assign(e[1], {\n                aspirantKey: e[0]\n              });\n            })\n          });\n\n          _this.setState({\n            contestantsPost: contestantsPost\n          });\n\n          console.log(_this.state.contestantsPost);\n        });\n      });\n    };\n\n    _this.state = {\n      contestantsPost: []\n    };\n    return _this;\n  }\n\n  _createClass(Result, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchAspirantsdata();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var contestantsPost = this.state.contestantsPost;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, contestantsPost.map(function (item) {\n        return React.createElement(Segment.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(Message, {\n          warning: true,\n          attached: \"bottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), item.post), item.aspirants.map(function (item, index) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(Segment.Group, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(Segment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, item.lastName + ' ' + item.firstName, \" \", React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, item.votes ? Object.keys(item.votes).length : \"-\"))));\n        }));\n      }))));\n    }\n  }]);\n\n  return Result;\n}(Component);\n\nexport default Result; // import React, {Component} from 'react';\n// import {Message, Segment, Icon, Container,Label} from 'semantic-ui-react';\n// import firebaseConf from './Firebase';\n// class Result extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       contestantsPost: [],\n//     };\n//   }\n//   componentDidMount() {\n//     this.fetchAspirantsdata();\n//   }\n//   fetchAspirantsdata = () => {\n//     firebaseConf\n//       .database()\n//       .ref('posts')\n//       .orderByChild('post')\n//       .on('value', snapshot => {\n//         const contestantsPost = [];\n//         snapshot.forEach(data => {\n//           contestantsPost.push({\n//             id: data.val().id,\n//             post: data.val().post,\n//             aspirants: Object.entries(\n//               data.val().aspirants ? data.val().aspirants : []\n//             ).map(e => Object.assign(e[1], {aspirantKey: e[0]})),\n//           });\n//           this.setState({contestantsPost});\n//           console.log(this.state.contestantsPost);\n//         });\n//       });\n//   };\n//   render() {\n//     const {contestantsPost} = this.state;\n//     return (\n//       <div>\n//         <Container>\n//           {contestantsPost.map(item => {\n//             return (\n//               <Segment.Group>\n//                 <Message warning attached='bottom'>\n//                 <Icon name='user' />\n//                 {item.post}\n//               </Message>\n//                 {item.aspirants.map((item, index) => (\n//                   <div>\n//                     <Segment.Group>\n//                       <Segment>{item.lastName + ' ' + item.firstName} <Label >{item.votes?Object.keys(item.votes).length:\"-\"}</Label></Segment>\n//                     </Segment.Group>\n//                   </div>\n//                 ))}\n//               </Segment.Group>\n//             );\n//           })}\n//         </Container>\n//       </div>\n//     );\n//   }\n// }\n// export default Result;","map":{"version":3,"sources":["C:\\Users\\Faizal\\Downloads\\e-voting\\src\\Components\\Result.js"],"names":["React","Component","Message","Card","Segment","Icon","Container","Label","firebaseConf","Result","fetchAspirantsdata","database","ref","orderByChild","on","snapshot","contestantsPost","forEach","data","push","id","val","post","aspirants","Object","entries","map","e","assign","aspirantKey","setState","console","log","state","item","index","lastName","firstName","votes","keys","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Message,Card, Segment, Icon, Container,Label} from 'semantic-ui-react';\r\nimport firebaseConf from './Firebase';\r\n\r\nclass Result extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      contestantsPost: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAspirantsdata();\r\n  }\r\n  fetchAspirantsdata = () => {\r\n    firebaseConf\r\n      .database()\r\n      .ref('posts')\r\n      .orderByChild('post')\r\n      .on('value', snapshot => {\r\n        const contestantsPost = [];\r\n        snapshot.forEach(data => {\r\n          contestantsPost.push({\r\n            id: data.val().id,\r\n            post: data.val().post,\r\n            aspirants: Object.entries(\r\n              data.val().aspirants ? data.val().aspirants : []\r\n            ).map(e => Object.assign(e[1], {aspirantKey: e[0]})),\r\n          });\r\n          this.setState({contestantsPost});\r\n          console.log(this.state.contestantsPost);\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    const {contestantsPost} = this.state;\r\n    return (\r\n      <div>\r\n        <Card.Group>\r\n          <Card>\r\n          {contestantsPost.map(item => {\r\n            return (\r\n              \r\n              <Segment.Group>\r\n                <Message warning attached='bottom'>\r\n                <Icon name='user' />\r\n                {item.post}\r\n              </Message>\r\n                {item.aspirants.map((item, index) => (\r\n                  <div>\r\n                    <Segment.Group>\r\n                      <Segment>{item.lastName + ' ' + item.firstName} <Label >{item.votes?Object.keys(item.votes).length:\"-\"}</Label></Segment>\r\n                    </Segment.Group>\r\n                  </div>\r\n                ))}\r\n              </Segment.Group>\r\n            );\r\n          })}\r\n          </Card>\r\n        </Card.Group>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {Component} from 'react';\r\n// import {Message, Segment, Icon, Container,Label} from 'semantic-ui-react';\r\n// import firebaseConf from './Firebase';\r\n\r\n// class Result extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       contestantsPost: [],\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.fetchAspirantsdata();\r\n//   }\r\n//   fetchAspirantsdata = () => {\r\n//     firebaseConf\r\n//       .database()\r\n//       .ref('posts')\r\n//       .orderByChild('post')\r\n//       .on('value', snapshot => {\r\n//         const contestantsPost = [];\r\n//         snapshot.forEach(data => {\r\n//           contestantsPost.push({\r\n//             id: data.val().id,\r\n//             post: data.val().post,\r\n//             aspirants: Object.entries(\r\n//               data.val().aspirants ? data.val().aspirants : []\r\n//             ).map(e => Object.assign(e[1], {aspirantKey: e[0]})),\r\n//           });\r\n//           this.setState({contestantsPost});\r\n//           console.log(this.state.contestantsPost);\r\n//         });\r\n//       });\r\n//   };\r\n//   render() {\r\n//     const {contestantsPost} = this.state;\r\n//     return (\r\n//       <div>\r\n//         <Container>\r\n//           {contestantsPost.map(item => {\r\n//             return (\r\n//               <Segment.Group>\r\n//                 <Message warning attached='bottom'>\r\n//                 <Icon name='user' />\r\n//                 {item.post}\r\n//               </Message>\r\n//                 {item.aspirants.map((item, index) => (\r\n//                   <div>\r\n//                     <Segment.Group>\r\n//                       <Segment>{item.lastName + ' ' + item.firstName} <Label >{item.votes?Object.keys(item.votes).length:\"-\"}</Label></Segment>\r\n//                     </Segment.Group>\r\n//                   </div>\r\n//                 ))}\r\n//               </Segment.Group>\r\n//             );\r\n//           })}\r\n//         </Container>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Result;\r\n"]},"metadata":{},"sourceType":"module"}