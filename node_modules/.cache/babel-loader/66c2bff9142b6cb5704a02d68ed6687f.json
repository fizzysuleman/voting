{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\src\\\\Components\\\\ChangePassword.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport firebaseConf from './Firebase';\nimport { withRouter } from 'react-router-dom';\nimport { Offline } from 'react-detect-offline';\n\nvar ChangePassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangePassword, _Component);\n\n  function ChangePassword(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePassword).call(this, props));\n\n    _this.updatePassword = function (passwordId) {\n      var _this$state = _this.state,\n          password = _this$state.password,\n          oldPassword = _this$state.oldPassword; // console.log(password[0].id);\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var newPassword = _this.state.newPassword;\n\n      if (oldPassword === password[0].adminPass) {\n        firebaseConf.database().ref(\"/admin/\".concat(passwordId)).update({\n          password: newPassword\n        }).then(function () {\n          _this.showAlert('success', 'You have successfully changed your admin password');\n\n          _this.setState({\n            isLoading: false\n          });\n        });\n      } else {\n        _this.showAlert('danger', 'You entered an incorrect Old password');\n\n        _this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      options: [],\n      oldPassword: '',\n      newPassword: '',\n      password: [{\n        adminPass: 'mfvmd',\n        id: ''\n      }],\n      isLoading: false\n    }; //post: props.location.state ? props.location.state.post : \"\"\n\n    return _this;\n  }\n\n  _createClass(ChangePassword, [{\n    key: \"showAlert\",\n    value: function showAlert(type, message) {\n      var _this2 = this;\n\n      this.setState({\n        alert: true,\n        alertData: {\n          type: type,\n          message: message\n        }\n      });\n      setTimeout(function () {\n        _this2.setState({\n          alert: false\n        });\n      }, 8000);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      firebaseConf.database().ref('admin').on('value', function (snapshot) {\n        var password = [];\n        snapshot.forEach(function (data) {\n          var passwordNew = {\n            adminPass: data.val().password,\n            id: data.key\n          };\n          password.push(passwordNew);\n\n          _this3.setState({\n            password: password\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          fullName = _this$state2.fullName,\n          oldPassword = _this$state2.oldPassword,\n          newPassword = _this$state2.newPassword,\n          isLoading = _this$state2.isLoading,\n          password = _this$state2.password; // console.log(this.state.password[0].id);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Change Admin Password\"), this.state.alert && React.createElement(\"div\", {\n        className: \"alert alert-\".concat(this.state.alertData.type),\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.alertData.message)), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, fullName), React.createElement(Form, {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        control: Input,\n        label: \"Old Password\",\n        value: oldPassword,\n        name: \"oldPassword\",\n        placeholder: \"Old Password\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: Input,\n        label: \"New Password\",\n        placeholder: \"New Password\",\n        name: \"newPassword\",\n        value: newPassword,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        control: Button,\n        loading: isLoading,\n        onClick: function onClick() {\n          return _this4.updatePassword(password[0].id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Change\")), React.createElement(Offline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"marquee\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"You are currently offline,Connect and contimue the process\")));\n    }\n  }]);\n\n  return ChangePassword;\n}(Component);\n\nexport default withRouter(ChangePassword);","map":{"version":3,"sources":["C:\\Users\\Faizal\\Downloads\\e-voting\\src\\Components\\ChangePassword.js"],"names":["React","Component","Button","Form","Input","firebaseConf","withRouter","Offline","ChangePassword","props","updatePassword","passwordId","state","password","oldPassword","setState","isLoading","newPassword","adminPass","database","ref","update","then","showAlert","handleChange","e","target","name","value","options","id","type","message","alert","alertData","setTimeout","on","snapshot","forEach","data","passwordNew","val","key","push","fullName"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Form, Input} from 'semantic-ui-react';\r\nimport firebaseConf from './Firebase';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Offline} from 'react-detect-offline';\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      password: [\r\n        {\r\n          adminPass: 'mfvmd',\r\n          id: '',\r\n        },\r\n      ],\r\n\r\n      isLoading: false,\r\n    };\r\n    //post: props.location.state ? props.location.state.post : \"\"\r\n  }\r\n  showAlert(type, message) {\r\n    this.setState({\r\n      alert: true,\r\n      alertData: {type, message},\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({alert: false});\r\n    }, 8000);\r\n  }\r\n\r\n  updatePassword = passwordId => {\r\n    const {password, oldPassword} = this.state;\r\n    // console.log(password[0].id);\r\n    this.setState({isLoading: true});\r\n    const {newPassword} = this.state;\r\n    if (oldPassword === password[0].adminPass) {\r\n      firebaseConf\r\n        .database()\r\n        .ref(`/admin/${passwordId}`)\r\n        .update({\r\n          password: newPassword,\r\n        })\r\n        .then(() => {\r\n          this.showAlert(\r\n            'success',\r\n            'You have successfully changed your admin password'\r\n          );\r\n          this.setState({isLoading: false});\r\n        });\r\n    } else {\r\n      this.showAlert('danger', 'You entered an incorrect Old password');\r\n      this.setState({isLoading: false});\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n  componentDidMount() {\r\n    firebaseConf\r\n      .database()\r\n      .ref('admin')\r\n      .on('value', snapshot => {\r\n        const password = [];\r\n        snapshot.forEach(data => {\r\n          const passwordNew = {\r\n            adminPass: data.val().password,\r\n            id: data.key,\r\n          };\r\n          password.push(passwordNew);\r\n          this.setState({password});\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      fullName,\r\n\r\n      oldPassword,\r\n      newPassword,\r\n      isLoading,\r\n      password,\r\n    } = this.state;\r\n    // console.log(this.state.password[0].id);\r\n    return (\r\n      <div>\r\n        <h1>Change Admin Password</h1>\r\n\r\n        {this.state.alert && (\r\n          <div\r\n            className={`alert alert-${this.state.alertData.type}`}\r\n            role=\"alert\"\r\n          >\r\n            <div className=\"container\">{this.state.alertData.message}</div>\r\n          </div>\r\n        )}\r\n        <h2>{fullName}</h2>\r\n\r\n        <Form onChange={this.handleChange}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Old Password\"\r\n              value={oldPassword}\r\n              name=\"oldPassword\"\r\n              placeholder=\"Old Password\"\r\n              type=\"password\"\r\n            />\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"New Password\"\r\n              placeholder=\"New Password\"\r\n              name=\"newPassword\"\r\n              value={newPassword}\r\n              type=\"password\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Field\r\n            control={Button}\r\n            loading={isLoading}\r\n            onClick={() => this.updatePassword(password[0].id)}\r\n          >\r\n            Change\r\n          </Form.Field>\r\n        </Form>\r\n\r\n        <Offline>\r\n          <marquee>\r\n            You are currently offline,Connect and contimue the process\r\n          </marquee>\r\n        </Offline>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ChangePassword);\r\n"]},"metadata":{},"sourceType":"module"}