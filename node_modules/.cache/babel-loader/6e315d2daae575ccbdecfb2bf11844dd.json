{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\src\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, Input, Select } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport firebaseConf from './Components/Firebase';\nimport { Offline } from 'react-detect-offline';\nvar options = [{\n  key: '1',\n  text: 'JSS1/YEAR 7',\n  value: 'JSS1/YEAR 7'\n}, {\n  key: '2',\n  text: 'JSS2/YEAR 8',\n  value: 'JSS2/YEAR 8'\n}, {\n  key: '3',\n  text: 'JSS3/YEAR 9',\n  value: 'JSS3/YEAR 9'\n}, {\n  key: '4',\n  text: 'SS1/YEAR 10',\n  value: 'SS1/YEAR 10'\n}, {\n  key: '5',\n  text: 'SS2/FORM 11',\n  value: 'SS2/FORM 11'\n}, {\n  key: '6',\n  text: 'SS3/FORM 12',\n  value: 'SS3/FORM 12'\n}, {\n  key: 'TS',\n  text: 'TEACHING STAFF',\n  value: 'TEACHING STAFF'\n}, {\n  key: 'NTS',\n  text: 'NON-TEACHING STAFF',\n  value: 'NON-TEACHING STAFF'\n}, {\n  key: 'O',\n  text: 'OTHERS',\n  value: 'OTHERS'\n}];\n\nvar FormExampleFieldControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormExampleFieldControl, _Component);\n\n  function FormExampleFieldControl() {\n    var _this;\n\n    _classCallCheck(this, FormExampleFieldControl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormExampleFieldControl).call(this));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleOptionSelect = function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isLoading: true\n      });\n      /**\r\n       * store all of everything thats being submitted,\r\n       * We do this by calling the ref method and passing\r\n       * in the destination we'd like them to be stored\r\n       */\n\n\n      var itemsRef = firebaseConf.database().ref('voters');\n\n      var uniqueID = function uniqueID() {\n        return 'LMC' + Math.random().toString(36).substr(2, 9).toUpperCase();\n      };\n\n      var item = {\n        fullName: _this.state.fullName,\n        category: _this.state.category,\n        section: _this.state.section,\n        teacher: _this.state.teacher,\n        schoolId: _this.state.schoolId,\n        id: uniqueID()\n      };\n      /**\r\n       * similar to the Array.push method,\r\n       * this sends a copy of our object so\r\n       * that it can be stored in Firebase.\r\n       */\n\n      var filteredSchoolId = _this.state.fetchedSchoolId.find(function (id) {\n        return _this.state.schoolId === id.schoolId;\n      });\n\n      var usedSchoolId = _this.state.votersData.find(function (id) {\n        return _this.state.schoolId === id.schoolId;\n      });\n\n      console.log(usedSchoolId);\n\n      if (!filteredSchoolId) {\n        _this.showAlert('danger', 'The school Id you used was not registered by this school, Contact administrator for further explanations');\n\n        _this.setState({\n          isLoading: false\n        });\n      } else if (usedSchoolId) {\n        _this.showAlert('danger', 'The school Id you used has been used by another person to register to vote, Contact administrator if it was not you');\n      } else {\n        itemsRef.push(item).then(function () {\n          _this.setState({\n            isLoading: false\n          });\n\n          _this.props.history.push({\n            pathname: '/Successful'\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      fullName: '',\n      section: '',\n      teacher: '',\n      category: '',\n      schoolId: '',\n      votersData: [],\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(FormExampleFieldControl, [{\n    key: \"showAlert\",\n    value: function showAlert(type, message) {\n      var _this2 = this;\n\n      this.setState({\n        alert: true,\n        alertData: {\n          type: type,\n          message: message\n        }\n      });\n      setTimeout(function () {\n        _this2.setState({\n          alert: false\n        });\n      }, 8000);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      firebaseConf.database().ref('schoolInfo').on('value', function (snapshot) {\n        var fetchedSchoolId = [];\n        snapshot.forEach(function (data) {\n          var fetchedSchoolIdNew = {\n            schoolId: data.key\n          };\n          fetchedSchoolId.push(fetchedSchoolIdNew);\n\n          _this3.setState({\n            fetchedSchoolId: fetchedSchoolId\n          });\n        });\n      }); //fetching voters school id to be able to see if they have registered before\n\n      firebaseConf.database().ref('voters').on('value', function (snapshot) {\n        var votersData = [];\n        snapshot.forEach(function (data) {\n          var votersDataNew = {\n            voterSchoolId: data.val().schoolId\n          };\n          votersData.push(votersDataNew);\n\n          _this3.setState({\n            votersData: votersData\n          });\n\n          console.log(_this3.state.votersData);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          fullName = _this$state.fullName,\n          category = _this$state.category,\n          teacher = _this$state.teacher,\n          section = _this$state.section,\n          isLoading = _this$state.isLoading,\n          schoolId = _this$state.schoolId;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Register Voters\"), React.createElement(\"marquee\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Note:Fill form in \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Capital Letters\")), this.state.alert && React.createElement(\"div\", {\n        className: \"alert alert-\".concat(this.state.alertData.type),\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.alertData.message)), React.createElement(Form, {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        control: Input,\n        label: \"Full name\",\n        placeholder: \"Full name\",\n        name: \"fullName\",\n        value: fullName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        control: Select,\n        label: \"Class/Category\",\n        options: options,\n        placeholder: \"Class/Category\",\n        name: \"category\",\n        onChange: this.handleOptionSelect,\n        value: category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: Input,\n        label: \"Section\",\n        placeholder: \"Section\",\n        name: \"section\",\n        value: section,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        control: Input,\n        label: \"Class Teacher\",\n        placeholder: \"Class Teacher(For only students)\",\n        name: \"teacher\",\n        value: teacher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: Input,\n        label: \"School ID\",\n        placeholder: \"School ID\",\n        name: \"schoolId\",\n        value: schoolId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: Button,\n        type: \"submit\",\n        color: \"blue\",\n        loading: isLoading,\n        disabled: !fullName || !category || !schoolId,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(Offline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"marquee\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"You are currently offline,Connect and contimue the process\")));\n    }\n  }]);\n\n  return FormExampleFieldControl;\n}(Component);\n\nexport default withRouter(FormExampleFieldControl); // import React, {Component} from 'react';\n// import firebaseConf from './Components/Firebase';\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       form: [],\n//       alert: false,\n//       alertData: {},\n//     };\n//   }\n//   showAlert(type, message) {\n//     this.setState({\n//       alert: true,\n//       alertData: {type, message},\n//     });\n//     setTimeout(() => {\n//       this.setState({alert: false});\n//     }, 4000);\n//   }\n//   resetForm() {\n//     this.refs.contactForm.reset();\n//   }\n//   componentWillMount() {\n//     let formRef = firebaseConf\n//       .database()\n//       .ref('form')\n//       .orderByKey()\n//       .limitToLast(6);\n//     formRef.on('child_added', snapshot => {\n//       const {name, email, city, phone, message} = snapshot.val();\n//       const data = {name, email, city, phone, message};\n//       this.setState({form: [data].concat(this.state.form)});\n//     });\n//   }\n//   sendMessage(e) {\n//     e.preventDefault();\n//     const params = {\n//       name: this.inputName.value,\n//       email: this.inputEmail.value,\n//       city: this.inputCity.value,\n//       phone: this.inputPhone.value,\n//       message: this.textAreaMessage.value,\n//     };\n//     if (\n//       params.name &&\n//       params.email &&\n//       params.phone &&\n//       params.phone &&\n//       params.message\n//     ) {\n//       firebaseConf\n//         .database()\n//         .ref('form')\n//         .push(params)\n//         .then(() => {\n//           this.showAlert('success', 'Your message was sent successfull');\n//         })\n//         .catch(() => {\n//           this.showAlert('danger', 'Your message could not be sent');\n//         });\n//       this.resetForm();\n//     } else {\n//       this.showAlert('warning', 'Please fill the form');\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         {this.state.alert && (\n//           <div\n//             className={`alert alert-${this.state.alertData.type}`}\n//             role=\"alert\"\n//           >\n//             <div className=\"container\">{this.state.alertData.message}</div>\n//           </div>\n//         )}\n//         <div className=\"container\" style={{padding: `40px 0px`}}>\n//           <div className=\"row\">\n//             <div className=\"col-sm-4\">\n//               <h2>Contact Form</h2>\n//               <form onSubmit={this.sendMessage.bind(this)} ref=\"contactForm\">\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"name\">Name</label>\n//                   <input\n//                     type=\"text\"\n//                     className=\"form-control\"\n//                     id=\"name\"\n//                     placeholder=\"Name\"\n//                     ref={name => (this.inputName = name)}\n//                   />\n//                 </div>\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"exampleInputEmail1\">Email</label>\n//                   <input\n//                     type=\"email\"\n//                     className=\"form-control\"\n//                     id=\"email\"\n//                     placeholder=\"Email\"\n//                     ref={email => (this.inputEmail = email)}\n//                   />\n//                 </div>\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"city\">City</label>\n//                   <select\n//                     className=\"form-control\"\n//                     id=\"city\"\n//                     ref={city => (this.inputCity = city)}\n//                   >\n//                     <option value=\"México\">México</option>\n//                     <option value=\"Guadalajara\">Guadalajara</option>\n//                     <option value=\"Monterrey\">Monterrey</option>\n//                   </select>\n//                 </div>\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"phone\">Phone</label>\n//                   <input\n//                     type=\"number\"\n//                     className=\"form-control\"\n//                     id=\"phone\"\n//                     placeholder=\"+52 1\"\n//                     ref={phone => (this.inputPhone = phone)}\n//                   />\n//                 </div>\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"message\">Message</label>\n//                   <textarea\n//                     className=\"form-control\"\n//                     id=\"message\"\n//                     rows=\"3\"\n//                     ref={message => (this.textAreaMessage = message)}\n//                   />\n//                 </div>\n//                 <button type=\"submit\" className=\"btn btn-primary\">\n//                   Send\n//                 </button>\n//               </form>\n//             </div>\n//             <div className=\"col-sm-8\">\n//               <div className=\"row\">\n//                 {this.state.form.map(form => (\n//                   <div\n//                     className=\"col-sm-6\"\n//                     key={form.phone}\n//                     style={{margin: `0px 0px 30px 0px`}}\n//                   >\n//                     <div className=\"card\">\n//                       <div className=\"card-body\">\n//                         <h4 className=\"card-title\">{form.name}</h4>\n//                         <h6 className=\"card-subtitle mb-2 text-muted\">\n//                           {form.city}\n//                         </h6>\n//                         <p className=\"card-text\">{form.message}</p>\n//                         <a href={`tel:${form.phone}`} className=\"card-link\">\n//                           {form.phone}\n//                         </a>\n//                         <a href={`mailto:${form.email}`} className=\"card-link\">\n//                           {form.email}\n//                         </a>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 ))}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"alert alert-info fixed-bottom\">\n//           <div className=\"container\">\n//             <div className=\"row\">\n//               <div className=\"col-sm-12\">\n//                 GnDx:{' '}\n//                 <a\n//                   href=\"https://gndx.co/formulario-contacto-react-firebase/\"\n//                   className=\"alert-link\"\n//                 >\n//                   Formulario de Contacto con React + Firebase{' '}\n//                 </a>\n//                 GitHub:{' '}\n//                 <a\n//                   href=\"https://github.com/gndx/react-form-firebase\"\n//                   className=\"alert-link\"\n//                 >\n//                   react-form-firebase\n//                 </a>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["C:\\Users\\Faizal\\Downloads\\e-voting\\src\\Register.js"],"names":["React","Component","Button","Form","Input","Select","withRouter","firebaseConf","Offline","options","key","text","value","FormExampleFieldControl","handleChange","e","setState","target","name","handleOptionSelect","handleSubmit","preventDefault","isLoading","itemsRef","database","ref","uniqueID","Math","random","toString","substr","toUpperCase","item","fullName","state","category","section","teacher","schoolId","id","filteredSchoolId","fetchedSchoolId","find","usedSchoolId","votersData","console","log","showAlert","push","then","props","history","pathname","type","message","alert","alertData","setTimeout","on","snapshot","forEach","data","fetchedSchoolIdNew","votersDataNew","voterSchoolId","val"],"mappings":"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":["import React, {Component} from 'react';\r\nimport {Button, Form, Input, Select} from 'semantic-ui-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport firebaseConf from './Components/Firebase';\r\nimport {Offline} from 'react-detect-offline';\r\n\r\nconst options = [\r\n  {key: '1', text: 'JSS1/YEAR 7', value: 'JSS1/YEAR 7'},\r\n  {key: '2', text: 'JSS2/YEAR 8', value: 'JSS2/YEAR 8'},\r\n  {key: '3', text: 'JSS3/YEAR 9', value: 'JSS3/YEAR 9'},\r\n  {key: '4', text: 'SS1/YEAR 10', value: 'SS1/YEAR 10'},\r\n  {key: '5', text: 'SS2/FORM 11', value: 'SS2/FORM 11'},\r\n  {key: '6', text: 'SS3/FORM 12', value: 'SS3/FORM 12'},\r\n  {key: 'TS', text: 'TEACHING STAFF', value: 'TEACHING STAFF'},\r\n  {key: 'NTS', text: 'NON-TEACHING STAFF', value: 'NON-TEACHING STAFF'},\r\n  {key: 'O', text: 'OTHERS', value: 'OTHERS'},\r\n];\r\n\r\nclass FormExampleFieldControl extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      fullName: '',\r\n      section: '',\r\n      teacher: '',\r\n      category: '',\r\n      schoolId:'',\r\n      votersData:[],\r\n      isLoading: false,\r\n    };\r\n  }\r\n  showAlert(type, message) {\r\n    this.setState({\r\n      alert: true,\r\n      alertData: {type, message},\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({alert: false});\r\n    }, 8000);\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  handleOptionSelect = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({isLoading: true});\r\n    /**\r\n     * store all of everything thats being submitted,\r\n     * We do this by calling the ref method and passing\r\n     * in the destination we'd like them to be stored\r\n     */\r\n\r\n    const itemsRef = firebaseConf.database().ref('voters');\r\n    const uniqueID = function() {\r\n      return (\r\n        'LMC' +\r\n        Math.random()\r\n          .toString(36)\r\n          .substr(2, 9)\r\n          .toUpperCase()\r\n      );\r\n    };\r\n    const item = {\r\n      fullName: this.state.fullName,\r\n      category: this.state.category,\r\n      section: this.state.section,\r\n      teacher: this.state.teacher,\r\n      schoolId: this.state.schoolId,\r\n      id: uniqueID(),\r\n    };\r\n   \r\n\r\n    /**\r\n     * similar to the Array.push method,\r\n     * this sends a copy of our object so\r\n     * that it can be stored in Firebase.\r\n     */\r\n    let filteredSchoolId = this.state.fetchedSchoolId.find(id => {\r\n      return this.state.schoolId === id.schoolId;\r\n    });\r\n    \r\n    let usedSchoolId=this.state.votersData.find(id=>{\r\n      return this.state.schoolId=== id.schoolId\r\n    })\r\nconsole.log(usedSchoolId)\r\n    if (!filteredSchoolId) {\r\n      this.showAlert(\r\n        'danger',\r\n        'The school Id you used was not registered by this school, Contact administrator for further explanations'\r\n      );\r\n      this.setState({isLoading:false})\r\n    }\r\n    else if(usedSchoolId){\r\n      this.showAlert(\r\n        'danger',\r\n        'The school Id you used has been used by another person to register to vote, Contact administrator if it was not you'\r\n      );\r\n    } \r\n    else {\r\n      itemsRef.push(item).then(() => {\r\n        this.setState({isLoading: false});\r\n        this.props.history.push({pathname: '/Successful'});\r\n      });\r\n    }\r\n  };\r\n  componentWillMount() {\r\n    firebaseConf\r\n      .database()\r\n      .ref('schoolInfo')\r\n      .on('value', snapshot => {\r\n        const fetchedSchoolId = [];\r\n        snapshot.forEach(data => {\r\n          const fetchedSchoolIdNew = {\r\n            schoolId: data.key,\r\n          };\r\n          fetchedSchoolId.push(fetchedSchoolIdNew);\r\n          this.setState({fetchedSchoolId});\r\n        });\r\n      });\r\n      //fetching voters school id to be able to see if they have registered before\r\n      firebaseConf.database().ref('voters').on('value',snapshot=>{\r\n        const votersData=[];\r\n        snapshot.forEach(data=>{\r\n          const votersDataNew={\r\n           voterSchoolId:data.val().schoolId \r\n          }\r\n          votersData.push(votersDataNew)\r\n          this.setState({votersData})\r\n          console.log(this.state.votersData)\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      fullName,\r\n      category,\r\n      teacher,\r\n      section,\r\n      isLoading,\r\n      schoolId,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Register Voters</h1>\r\n        <marquee>\r\n          Note:Fill form in <strong>Capital Letters</strong>\r\n        </marquee>\r\n        {this.state.alert && (\r\n          <div\r\n            className={`alert alert-${this.state.alertData.type}`}\r\n            role=\"alert\"\r\n          >\r\n            <div className=\"container\">{this.state.alertData.message}</div>\r\n          </div>\r\n        )}\r\n        <Form onChange={this.handleChange}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Full name\"\r\n              placeholder=\"Full name\"\r\n              name=\"fullName\"\r\n              value={fullName}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field\r\n              control={Select}\r\n              label=\"Class/Category\"\r\n              options={options}\r\n              placeholder=\"Class/Category\"\r\n              name=\"category\"\r\n              onChange={this.handleOptionSelect}\r\n              value={category}\r\n            />\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Section\"\r\n              placeholder=\"Section\"\r\n              name=\"section\"\r\n              value={section}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Class Teacher\"\r\n              placeholder=\"Class Teacher(For only students)\"\r\n              name=\"teacher\"\r\n              value={teacher}\r\n            />\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"School ID\"\r\n              placeholder=\"School ID\"\r\n              name=\"schoolId\"\r\n              value={schoolId}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <br />\r\n          <br />\r\n\r\n          <Form.Field\r\n            control={Button}\r\n            type=\"submit\"\r\n            color=\"blue\"\r\n            loading={isLoading}\r\n            disabled={!fullName || !category || !schoolId}\r\n            onClick={this.handleSubmit}\r\n          >\r\n            Submit\r\n          </Form.Field>\r\n        </Form>\r\n        <Offline>\r\n          <marquee>\r\n            You are currently offline,Connect and contimue the process\r\n          </marquee>\r\n        </Offline>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(FormExampleFieldControl);\r\n\r\n// import React, {Component} from 'react';\r\n// import firebaseConf from './Components/Firebase';\r\n\r\n// class App extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       form: [],\r\n//       alert: false,\r\n//       alertData: {},\r\n//     };\r\n//   }\r\n\r\n//   showAlert(type, message) {\r\n//     this.setState({\r\n//       alert: true,\r\n//       alertData: {type, message},\r\n//     });\r\n//     setTimeout(() => {\r\n//       this.setState({alert: false});\r\n//     }, 4000);\r\n//   }\r\n\r\n//   resetForm() {\r\n//     this.refs.contactForm.reset();\r\n//   }\r\n\r\n//   componentWillMount() {\r\n//     let formRef = firebaseConf\r\n//       .database()\r\n//       .ref('form')\r\n//       .orderByKey()\r\n//       .limitToLast(6);\r\n//     formRef.on('child_added', snapshot => {\r\n//       const {name, email, city, phone, message} = snapshot.val();\r\n//       const data = {name, email, city, phone, message};\r\n//       this.setState({form: [data].concat(this.state.form)});\r\n//     });\r\n//   }\r\n\r\n//   sendMessage(e) {\r\n//     e.preventDefault();\r\n//     const params = {\r\n//       name: this.inputName.value,\r\n//       email: this.inputEmail.value,\r\n//       city: this.inputCity.value,\r\n//       phone: this.inputPhone.value,\r\n//       message: this.textAreaMessage.value,\r\n//     };\r\n//     if (\r\n//       params.name &&\r\n//       params.email &&\r\n//       params.phone &&\r\n//       params.phone &&\r\n//       params.message\r\n//     ) {\r\n//       firebaseConf\r\n//         .database()\r\n//         .ref('form')\r\n//         .push(params)\r\n//         .then(() => {\r\n//           this.showAlert('success', 'Your message was sent successfull');\r\n//         })\r\n//         .catch(() => {\r\n//           this.showAlert('danger', 'Your message could not be sent');\r\n//         });\r\n//       this.resetForm();\r\n//     } else {\r\n//       this.showAlert('warning', 'Please fill the form');\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         {this.state.alert && (\r\n//           <div\r\n//             className={`alert alert-${this.state.alertData.type}`}\r\n//             role=\"alert\"\r\n//           >\r\n//             <div className=\"container\">{this.state.alertData.message}</div>\r\n//           </div>\r\n//         )}\r\n//         <div className=\"container\" style={{padding: `40px 0px`}}>\r\n//           <div className=\"row\">\r\n//             <div className=\"col-sm-4\">\r\n//               <h2>Contact Form</h2>\r\n//               <form onSubmit={this.sendMessage.bind(this)} ref=\"contactForm\">\r\n//                 <div className=\"form-group\">\r\n//                   <label htmlFor=\"name\">Name</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     className=\"form-control\"\r\n//                     id=\"name\"\r\n//                     placeholder=\"Name\"\r\n//                     ref={name => (this.inputName = name)}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                   <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n//                   <input\r\n//                     type=\"email\"\r\n//                     className=\"form-control\"\r\n//                     id=\"email\"\r\n//                     placeholder=\"Email\"\r\n//                     ref={email => (this.inputEmail = email)}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                   <label htmlFor=\"city\">City</label>\r\n//                   <select\r\n//                     className=\"form-control\"\r\n//                     id=\"city\"\r\n//                     ref={city => (this.inputCity = city)}\r\n//                   >\r\n//                     <option value=\"México\">México</option>\r\n//                     <option value=\"Guadalajara\">Guadalajara</option>\r\n//                     <option value=\"Monterrey\">Monterrey</option>\r\n//                   </select>\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                   <label htmlFor=\"phone\">Phone</label>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     className=\"form-control\"\r\n//                     id=\"phone\"\r\n//                     placeholder=\"+52 1\"\r\n//                     ref={phone => (this.inputPhone = phone)}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                   <label htmlFor=\"message\">Message</label>\r\n//                   <textarea\r\n//                     className=\"form-control\"\r\n//                     id=\"message\"\r\n//                     rows=\"3\"\r\n//                     ref={message => (this.textAreaMessage = message)}\r\n//                   />\r\n//                 </div>\r\n//                 <button type=\"submit\" className=\"btn btn-primary\">\r\n//                   Send\r\n//                 </button>\r\n//               </form>\r\n//             </div>\r\n//             <div className=\"col-sm-8\">\r\n//               <div className=\"row\">\r\n//                 {this.state.form.map(form => (\r\n//                   <div\r\n//                     className=\"col-sm-6\"\r\n//                     key={form.phone}\r\n//                     style={{margin: `0px 0px 30px 0px`}}\r\n//                   >\r\n//                     <div className=\"card\">\r\n//                       <div className=\"card-body\">\r\n//                         <h4 className=\"card-title\">{form.name}</h4>\r\n//                         <h6 className=\"card-subtitle mb-2 text-muted\">\r\n//                           {form.city}\r\n//                         </h6>\r\n//                         <p className=\"card-text\">{form.message}</p>\r\n//                         <a href={`tel:${form.phone}`} className=\"card-link\">\r\n//                           {form.phone}\r\n//                         </a>\r\n//                         <a href={`mailto:${form.email}`} className=\"card-link\">\r\n//                           {form.email}\r\n//                         </a>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"alert alert-info fixed-bottom\">\r\n//           <div className=\"container\">\r\n//             <div className=\"row\">\r\n//               <div className=\"col-sm-12\">\r\n//                 GnDx:{' '}\r\n//                 <a\r\n//                   href=\"https://gndx.co/formulario-contacto-react-firebase/\"\r\n//                   className=\"alert-link\"\r\n//                 >\r\n//                   Formulario de Contacto con React + Firebase{' '}\r\n//                 </a>\r\n//                 GitHub:{' '}\r\n//                 <a\r\n//                   href=\"https://github.com/gndx/react-form-firebase\"\r\n//                   className=\"alert-link\"\r\n//                 >\r\n//                   react-form-firebase\r\n//                 </a>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n"]},"metadata":{},"sourceType":"module"}