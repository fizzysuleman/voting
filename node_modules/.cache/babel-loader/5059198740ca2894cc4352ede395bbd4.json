{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\src\\\\Components\\\\Applicants.js\";\nimport React, { Component } from 'react';\nimport { Table, Header, Image, Button, Icon, Modal } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport firebaseConf from './Firebase';\n\nvar TableExampleSelectableInvertedRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableExampleSelectableInvertedRow, _Component);\n\n  function TableExampleSelectableInvertedRow(props) {\n    var _this;\n\n    _classCallCheck(this, TableExampleSelectableInvertedRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TableExampleSelectableInvertedRow).call(this, props));\n\n    _this.openDisapprove = function (id, aspirantKey, fullName) {\n      _this.setState({\n        userId: id\n      });\n\n      _this.setState({\n        aKey: aspirantKey\n      });\n\n      _this.setState({\n        fullName: fullName\n      });\n\n      _this.handleOpenDisapprovedModal();\n    };\n\n    _this.removeItem = function (userId, aKey) {\n      _this.setState({\n        isLoading: true\n      });\n\n      console.log(aKey);\n      var itemRef = firebaseConf.database().ref(\"/posts/\".concat(userId, \"/aspirants/\").concat(aKey));\n      itemRef.remove().then(function () {\n        _this.setState({\n          isLoading: false\n        });\n\n        _this.handleCloseDisapprovedModal();\n      });\n    };\n\n    _this.handleOpenDisapprovedModal = function () {\n      _this.setState({\n        openDisapprovedModal: true\n      });\n    };\n\n    _this.handleCloseDisapprovedModal = function () {\n      _this.setState({\n        openDisapprovedModal: false\n      });\n    };\n\n    _this.changePost = function (item) {\n      _this.props.history.push({\n        pathname: '/change',\n        state: {\n          item: item\n        }\n      });\n    };\n\n    _this.fetchAspirantsdata = function () {\n      firebaseConf.database().ref('posts').orderByChild('post').on('value', function (snapshot) {\n        var postsData = [];\n        snapshot.forEach(function (data) {\n          postsData.push({\n            aspirants: Object.entries(data.val().aspirants ? data.val().aspirants : []).map(function (e) {\n              return Object.assign(e[1], {\n                aspirantKey: e[0]\n              });\n            })\n          });\n        });\n\n        _this.setState({\n          postsData: postsData\n        });\n\n        var newData = postsData.filter(function (item) {\n          return item.aspirants.length > 0;\n        });\n        var finalData = newData.map(function (item) {\n          return item.aspirants;\n        });\n        var finalFinalData = finalData.reduce(function (a, b) {\n          return a.concat(b);\n        }, []);\n\n        _this.setState({\n          aspirant: finalFinalData\n        });\n\n        console.log(_this.state.aspirant);\n      });\n    };\n\n    _this.state = {\n      postsData: [],\n      isLoading: false,\n      openDisapprovedModal: false,\n      aKey: '',\n      userId: '',\n      basic: true,\n      buttonContent: 'Approved',\n      aspirant: []\n    };\n    return _this;\n  }\n\n  _createClass(TableExampleSelectableInvertedRow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchAspirantsdata();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          postsData = _this$state.postsData,\n          isLoading = _this$state.isLoading,\n          openDisapprovedModal = _this$state.openDisapprovedModal,\n          aspirant = _this$state.aspirant;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Table, {\n        celled: true,\n        inverted: true,\n        selectable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Fullname\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Post\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Class(SS2)\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Reason want to become a Prefect\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"What would do if put in that post\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Status\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, aspirant.map(function (item, index) {\n        return React.createElement(Table.Row, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Header, {\n          as: \"h4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: item.imageUrl.downloadURL ? item.imageUrl.downloadURL : '',\n          rounded: true,\n          size: \"mini\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(Header.Content, {\n          style: {\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, item.lastName + ' ' + item.firstName))), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, item.prefectName), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, item.section), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, item.reason), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, item.todo), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(Button, {\n          basic: _this2.state.basic,\n          color: \"green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, _this2.state.buttonContent), React.createElement(Button, {\n          basic: true,\n          color: \"red\",\n          onClick: function onClick() {\n            return _this2.openDisapprove(item.prefectId, item.aspirantKey, item.lastName + ' ' + item.firstName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"Disapprove\"), React.createElement(Button, {\n          basic: true,\n          color: \"yellow\",\n          onClick: function onClick() {\n            return _this2.changePost(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, \"Change Post\")));\n      }))), React.createElement(Image, {\n        src: this.state.img,\n        rounded: true,\n        size: \"mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: openDisapprovedModal,\n        onClose: this.handleCloseDisapprovedModal,\n        basic: true,\n        size: \"small\",\n        style: {\n          minHeight: '100vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Header, {\n        icon: \"user delete\",\n        content: \"Removal Confirmation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Are you sure you want to remove \", this.state.fullName)), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Button, {\n        basic: true,\n        color: \"red\",\n        inverted: true,\n        onClick: this.handleCloseDisapprovedModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), \" No\"), React.createElement(Button, {\n        color: \"green\",\n        onClick: function onClick() {\n          return _this2.removeItem(_this2.state.userId, _this2.state.aKey);\n        },\n        loading: isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), \" Yes\")))));\n    }\n  }]);\n\n  return TableExampleSelectableInvertedRow;\n}(Component);\n\nexport default withRouter(TableExampleSelectableInvertedRow);","map":{"version":3,"sources":["C:\\Users\\Faizal\\Downloads\\e-voting\\src\\Components\\Applicants.js"],"names":["React","Component","Table","Header","Image","Button","Icon","Modal","withRouter","firebaseConf","TableExampleSelectableInvertedRow","props","openDisapprove","id","aspirantKey","fullName","setState","userId","aKey","handleOpenDisapprovedModal","removeItem","isLoading","console","log","itemRef","database","ref","remove","then","handleCloseDisapprovedModal","openDisapprovedModal","changePost","item","history","push","pathname","state","fetchAspirantsdata","orderByChild","on","snapshot","postsData","forEach","data","aspirants","Object","entries","val","map","e","assign","newData","filter","length","finalData","finalFinalData","reduce","a","b","concat","aspirant","basic","buttonContent","index","imageUrl","downloadURL","color","lastName","firstName","prefectName","section","reason","todo","prefectId","img","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Table, Header, Image, Button, Icon, Modal} from 'semantic-ui-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport firebaseConf from './Firebase';\r\n\r\nclass TableExampleSelectableInvertedRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      postsData: [],\r\n      isLoading: false,\r\n      openDisapprovedModal: false,\r\n      aKey:'',\r\n      userId: '',\r\n      \r\n      basic: true,\r\n      buttonContent: 'Approved',\r\n      aspirant: [],\r\n    };\r\n  }\r\n\r\n  openDisapprove = (id,aspirantKey, fullName) => {\r\n    this.setState({userId: id});\r\n    this.setState({aKey: aspirantKey});\r\n    this.setState({fullName});\r\n    this.handleOpenDisapprovedModal();\r\n  };\r\n\r\n  removeItem = (userId,aKey) => {\r\n    this.setState({isLoading: true});\r\n    console.log(aKey)\r\n    const itemRef = firebaseConf.database().ref(`/posts/${userId}/aspirants/${aKey}`);\r\n    itemRef.remove().then(() => {\r\n      this.setState({isLoading: false});\r\n      this.handleCloseDisapprovedModal();\r\n    });\r\n  };\r\n\r\n  handleOpenDisapprovedModal = () => {\r\n    this.setState({openDisapprovedModal: true});\r\n  };\r\n\r\n  handleCloseDisapprovedModal = () => {\r\n    this.setState({openDisapprovedModal: false});\r\n  };\r\n\r\n  changePost = (item) => {\r\n    this.props.history.push({\r\n      pathname: '/change',\r\n      state: {item},\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchAspirantsdata();\r\n  }\r\n\r\n  fetchAspirantsdata = () => {\r\n    firebaseConf\r\n      .database()\r\n      .ref('posts')\r\n      .orderByChild('post')\r\n      .on('value', snapshot => {\r\n        const postsData = [];\r\n        snapshot.forEach(data => {\r\n          postsData.push({\r\n            aspirants: Object.entries(\r\n              data.val().aspirants ? data.val().aspirants : []\r\n            ).map(e => Object.assign(e[1], {aspirantKey: e[0]})),\r\n          });\r\n          });\r\n\r\n          this.setState({postsData: postsData});\r\n          let newData = postsData.filter(item => {\r\n            return item.aspirants.length > 0;\r\n          });\r\n\r\n          let finalData = newData.map(item => {\r\n            return item.aspirants;\r\n          });\r\n\r\n          let finalFinalData = finalData.reduce((a, b) => {\r\n            return a.concat(b);\r\n          }, []);\r\n\r\n          this.setState({aspirant: finalFinalData});\r\n          console.log(this.state.aspirant);\r\n        });\r\n      };\r\n  ;\r\n\r\n  render() {\r\n    const {postsData, isLoading, openDisapprovedModal, aspirant} = this.state;\r\n    return (\r\n      <div>\r\n        <Table celled inverted selectable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Fullname</Table.HeaderCell>\r\n              <Table.HeaderCell>Post</Table.HeaderCell>\r\n              <Table.HeaderCell>Class(SS2)</Table.HeaderCell>\r\n              <Table.HeaderCell>\r\n                Reason want to become a Prefect\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>\r\n                What would do if put in that post\r\n              </Table.HeaderCell>\r\n              <Table.HeaderCell>Status</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {aspirant.map((item, index) => (\r\n              <Table.Row key={index}>\r\n                <Table.Cell>\r\n                  <Header as=\"h4\">\r\n                    <Image\r\n                      src={item.imageUrl.downloadURL ? item.imageUrl.downloadURL : ''}\r\n                      rounded\r\n                      size=\"mini\"\r\n                    />\r\n                    <Header.Content style={{color: 'white'}}>\r\n                      {item.lastName+' '+item.firstName}\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell>{item.prefectName}</Table.Cell>\r\n                <Table.Cell>{item.section}</Table.Cell>\r\n                <Table.Cell>{item.reason}</Table.Cell>\r\n                <Table.Cell>{item.todo}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button basic={this.state.basic} color=\"green\">\r\n                    {this.state.buttonContent}\r\n                  </Button>\r\n                  <Button\r\n                    basic\r\n                    color=\"red\"\r\n                    onClick={() =>\r\n                      this.openDisapprove(item.prefectId,item.aspirantKey, (item.lastName+' '+item.firstName))\r\n                    }\r\n                  >\r\n                    Disapprove\r\n                  </Button>\r\n                  <Button\r\n                    basic\r\n                    color=\"yellow\"\r\n                    onClick={() =>\r\n                      this.changePost(\r\n                       item\r\n                      )\r\n                    }\r\n                  >\r\n                    Change Post\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        <Image src={this.state.img} rounded size=\"mini\" />\r\n        {/* .............................................................................................................................................. */}\r\n        {/* .............................................................................................................................................. */}\r\n        {/* .............................................................................................................................................. */}\r\n\r\n        <div>\r\n          <Modal\r\n            open={openDisapprovedModal}\r\n            onClose={this.handleCloseDisapprovedModal}\r\n            basic\r\n            size=\"small\"\r\n            style={{minHeight: '100vh'}}\r\n          >\r\n            <Header icon=\"user delete\" content=\"Removal Confirmation\" />\r\n            <Modal.Content>\r\n              <p>Are you sure you want to remove {this.state.fullName}</p>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button\r\n                basic\r\n                color=\"red\"\r\n                inverted\r\n                onClick={this.handleCloseDisapprovedModal}\r\n              >\r\n                <Icon name=\"remove\" /> No\r\n              </Button>\r\n              <Button\r\n                color=\"green\"\r\n                onClick={() => this.removeItem(this.state.userId,this.state.aKey)}\r\n                loading={isLoading}\r\n              >\r\n                <Icon name=\"checkmark\" /> Yes\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(TableExampleSelectableInvertedRow);\r\n"]},"metadata":{},"sourceType":"module"}