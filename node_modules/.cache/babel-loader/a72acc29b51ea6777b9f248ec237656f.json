{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _without2 = _interopRequireDefault(require(\"lodash/without\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _lib = require(\"../../lib\");\n\nvar _SegmentGroup = _interopRequireDefault(require(\"./SegmentGroup\"));\n\nvar _SegmentInline = _interopRequireDefault(require(\"./SegmentInline\"));\n/**\n * A segment is used to create a grouping of related content.\n */\n\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = (0, _classnames.default)('ui', color, size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(clearing, 'clearing'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(placeholder, 'placeholder'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(stacked, 'stacked'), (0, _lib.useKeyOnly)(tertiary, 'tertiary'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(floated, 'floated'), 'segment', className);\n  var rest = (0, _lib.getUnhandledProps)(Segment, props);\n  var ElementType = (0, _lib.getElementType)(Segment, props);\n  return _react.default.createElement(ElementType, (0, _extends2.default)({}, rest, {\n    className: classes\n  }), _lib.childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = _SegmentGroup.default;\nSegment.Inline = _SegmentInline.default;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Attach segment to other content, like a header. */\n  attached: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: _propTypes.default.bool,\n\n  /** Primary content. */\n  children: _propTypes.default.node,\n\n  /** A segment can be circular. */\n  circular: _propTypes.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes.default.string,\n\n  /** A segment can clear floated content. */\n  clearing: _propTypes.default.bool,\n\n  /** Segment can be colored. */\n  color: _propTypes.default.oneOf(_lib.SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: _propTypes.default.bool,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: _propTypes.default.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: _propTypes.default.oneOf(_lib.SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: _propTypes.default.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: _propTypes.default.bool,\n\n  /** A segment can increase its padding. */\n  padded: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: _propTypes.default.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: _propTypes.default.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: _propTypes.default.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: _propTypes.default.bool,\n\n  /** A segment can have different sizes. */\n  size: _propTypes.default.oneOf((0, _without2.default)(_lib.SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: _propTypes.default.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: _propTypes.default.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: _propTypes.default.oneOf((0, _without2.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: _propTypes.default.bool\n} : {};\nvar _default = Segment;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}