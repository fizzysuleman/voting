{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Faizal\\\\Downloads\\\\e-voting\\\\src\\\\Components\\\\Election.js\";\nimport React, { Component } from 'react';\nimport { Card, Icon, Image, Container, Button, Accordion, Form, Label, Modal, Header } from 'semantic-ui-react';\nimport firebaseConf from './Firebase';\nimport { withRouter } from 'react-router-dom';\n\nvar AccordionExampleStandard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccordionExampleStandard, _Component);\n\n  function AccordionExampleStandard(props) {\n    var _this;\n\n    _classCallCheck(this, AccordionExampleStandard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccordionExampleStandard).call(this, props));\n\n    _this.handleOpenModal = function () {\n      _this.setState({\n        openModal: true\n      });\n    };\n\n    _this.handleCloseModal = function () {\n      _this.setState({\n        openModal: false\n      });\n    };\n\n    _this.handleClick = function (e, titleProps) {\n      var index = titleProps.index;\n      var activeIndex = _this.state.activeIndex;\n      var newIndex = activeIndex === index ? -1 : index;\n\n      _this.setState({\n        activeIndex: newIndex\n      });\n    };\n\n    _this.handleFinish = function () {\n      sessionStorage.removeItem('VOTERID');\n\n      _this.props.history.push({\n        pathname: '/login'\n      });\n\n      firebaseConf.database().ref(\"/voters/\".concat(_this.state.uid)).update({\n        status: 'Has Voted'\n      });\n    };\n\n    _this.handleUnvote = function (prefectId, aspirantKey, postIndex, aspirantIndex) {\n      return function () {\n        var voterId = _this.state.voterId;\n        var removeRef = firebaseConf.database().ref(\"posts/\".concat(prefectId, \"/aspirants/\").concat(aspirantKey, \"/votes/\").concat(voterId));\n        removeRef.remove();\n        var removeRef2 = firebaseConf.database().ref(\"posts/\".concat(prefectId, \"/votes/\").concat(voterId));\n        removeRef2.remove();\n      };\n    };\n\n    _this.handleVote = function (prefectId, aspirantKey, postIndex, aspirantIndex) {\n      return function () {\n        var voterId = _this.state.voterId;\n        var itemsRef = firebaseConf.database().ref(\"posts/\".concat(prefectId, \"/aspirants/\").concat(aspirantKey, \"/votes\"));\n        itemsRef.child(voterId).set({\n          voterId: voterId\n        });\n        var votersRef = firebaseConf.database().ref(\"posts/\".concat(prefectId, \"/votes\"));\n        votersRef.child(voterId).set({\n          voterId: voterId\n        });\n      };\n    };\n\n    _this.fetchAspirantsdata = function () {\n      firebaseConf.database().ref('posts').orderByChild('post').on('value', function (snapshot) {\n        var contestantsPost = [];\n        snapshot.forEach(function (data) {\n          contestantsPost.push({\n            id: data.val().id,\n            post: data.val().post,\n            votes: data.val().votes,\n            aspirants: Object.entries(data.val().aspirants ? data.val().aspirants : []).map(function (e) {\n              return Object.assign(e[1], {\n                aspirantKey: e[0]\n              });\n            })\n          });\n\n          _this.setState({\n            contestantsPost: contestantsPost\n          });\n        }); //trying to get the items in the in aspirants \n      });\n    };\n\n    _this.state = {\n      activeIndex: '',\n      contestantsPost: [],\n      fullName: props.location.state ? props.location.state.correctIdName : '',\n      uid: props.location.state ? props.location.state.uid : '',\n      haveVoted: [],\n      voterId: '',\n      openModal: false,\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(AccordionExampleStandard, [{\n    key: \"showAlert\",\n    value: function showAlert(type, message) {\n      var _this2 = this;\n\n      this.setState({\n        alert: true,\n        alertData: {\n          type: type,\n          message: message\n        }\n      });\n      setTimeout(function () {\n        _this2.setState({\n          alert: false\n        });\n      }, 4000);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchAspirantsdata();\n      var voterId = sessionStorage.getItem('VOTERID');\n      this.setState({\n        voterId: voterId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          activeIndex = _this$state.activeIndex,\n          contestantsPost = _this$state.contestantsPost,\n          voterId = _this$state.voterId;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Welcome \", ' ' + this.state.fullName + ', ', \" Vote wisely!\"), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Accordion, {\n        styled: true,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, contestantsPost.map(function (posts, index) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(Accordion.Title, {\n          active: activeIndex === index,\n          index: index,\n          onClick: _this3.handleClick,\n          key: posts.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"dropdown\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }), posts.votes && posts.votes[voterId] ? React.createElement(Label, {\n          color: \"green\",\n          content: posts.post,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }) : posts.post), React.createElement(Accordion.Content, {\n          active: activeIndex === index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(Card.Group, {\n          centered: true,\n          stretched: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, posts.aspirants.map(function (item, i) {\n          return React.createElement(Card, {\n            style: {\n              width: '200px',\n              height: '20%'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(Image, {\n            src: item.imageUrl ? item.imageUrl.downloadURL : '',\n            style: {\n              height: '120px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }), React.createElement(Card.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, React.createElement(Card.Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, React.createElement(\"center\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, item.lastName + ' ' + item.firstName))), React.createElement(Card.Content, {\n            extra: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, React.createElement(\"center\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, !(item.votes && item.votes[voterId]) && React.createElement(Button, {\n            color: \"green\",\n            onClick: _this3.handleVote(item.prefectId, item.aspirantKey, index, i),\n            disabled: posts.votes && posts.votes[voterId],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, \"Vote\"), item.votes && item.votes[voterId] && React.createElement(Button, {\n            color: \"red\",\n            onClick: _this3.handleUnvote(item.prefectId, item.aspirantKey, index, i),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, \"Unvote\"))));\n        }))));\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          marginLeft: '50%',\n          marginRight: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        style: {\n          paddingLeft: 'auto',\n          paddingRight: 'auto'\n        },\n        control: Button,\n        type: \"submit\",\n        color: \"blue\",\n        onClick: this.handleOpenModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Finish\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: this.state.openModal,\n        onClose: this.handleCloseModal,\n        basic: true,\n        size: \"small\",\n        style: {\n          minHeight: '100vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Header, {\n        icon: \"user delete\",\n        content: \"Submission Confirmation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Are you sure you want to want to end Voting process\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Note:You cant change your mind after submitting\")), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Button, {\n        basic: true,\n        color: \"red\",\n        inverted: true,\n        onClick: this.handleCloseDisapprovedModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), \" No\"), React.createElement(Button, {\n        color: \"green\",\n        onClick: function onClick() {\n          return _this3.handleFinish();\n        },\n        loading: this.state.isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), \" Yes\")))));\n    }\n  }]);\n\n  return AccordionExampleStandard;\n}(Component);\n\nexport default withRouter(AccordionExampleStandard);","map":{"version":3,"sources":["C:\\Users\\Faizal\\Downloads\\e-voting\\src\\Components\\Election.js"],"names":["React","Component","Card","Icon","Image","Container","Button","Accordion","Form","Label","Modal","Header","firebaseConf","withRouter","AccordionExampleStandard","props","handleOpenModal","setState","openModal","handleCloseModal","handleClick","e","titleProps","index","activeIndex","state","newIndex","handleFinish","sessionStorage","removeItem","history","push","pathname","database","ref","uid","update","status","handleUnvote","prefectId","aspirantKey","postIndex","aspirantIndex","voterId","removeRef","remove","removeRef2","handleVote","itemsRef","child","set","votersRef","fetchAspirantsdata","orderByChild","on","snapshot","contestantsPost","forEach","data","id","val","post","votes","aspirants","Object","entries","map","assign","fullName","location","correctIdName","haveVoted","isLoading","type","message","alert","alertData","setTimeout","getItem","width","posts","key","item","i","height","imageUrl","downloadURL","lastName","firstName","marginLeft","marginRight","paddingLeft","paddingRight","minHeight","handleCloseDisapprovedModal"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Image,\r\n  Container,\r\n  Button,\r\n  Accordion,\r\n  Form,\r\n  Label,\r\n  Modal,\r\n  Header\r\n} from 'semantic-ui-react';\r\nimport firebaseConf from './Firebase';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass AccordionExampleStandard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeIndex: '',\r\n      contestantsPost: [],\r\n      fullName: props.location.state ? props.location.state.correctIdName : '',\r\n      uid:props.location.state ? props.location.state.uid : '',\r\n      haveVoted: [],\r\n      voterId: '',\r\n      openModal: false,\r\n      isLoading:false\r\n    };\r\n  }\r\n\r\n  showAlert(type, message) {\r\n    this.setState({\r\n      alert: true,\r\n      alertData: {type, message},\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({alert: false});\r\n    }, 4000);\r\n  }\r\n\r\n  handleOpenModal = () => {\r\n    this.setState({openModal: true});\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({openModal: false});\r\n  };\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const {index} = titleProps;\r\n    const {activeIndex} = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({activeIndex: newIndex});\r\n  };\r\n\r\n  \r\n\r\n  handleFinish = () => {\r\n    sessionStorage.removeItem('VOTERID');\r\n    this.props.history.push({\r\n      pathname: '/login',\r\n    });\r\n    firebaseConf\r\n      .database()\r\n      .ref(`/voters/${this.state.uid}`)\r\n      .update({\r\n        status:'Has Voted'\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.fetchAspirantsdata();\r\n\r\n    let voterId = sessionStorage.getItem('VOTERID');\r\n    this.setState({voterId});\r\n  }\r\n\r\n  handleUnvote = (prefectId, aspirantKey, postIndex, aspirantIndex) => () => {\r\n    const {voterId} = this.state;\r\n\r\n    const removeRef = firebaseConf\r\n      .database()\r\n      .ref(`posts/${prefectId}/aspirants/${aspirantKey}/votes/${voterId}`);\r\n    removeRef.remove();\r\n\r\n    const removeRef2 = firebaseConf\r\n      .database()\r\n      .ref(`posts/${prefectId}/votes/${voterId}`);\r\n    removeRef2.remove();\r\n    \r\n  };\r\n\r\n  handleVote = (prefectId, aspirantKey, postIndex, aspirantIndex) => () => {\r\n    const {voterId} = this.state;\r\n    const itemsRef = firebaseConf\r\n      .database()\r\n      .ref(`posts/${prefectId}/aspirants/${aspirantKey}/votes`);\r\n\r\n    itemsRef.child(voterId).set({voterId: voterId});\r\n\r\n    const votersRef = firebaseConf.database().ref(`posts/${prefectId}/votes`);\r\n\r\n    votersRef\r\n      .child(voterId)\r\n      .set({voterId: voterId})\r\n\r\n     \r\n   \r\n\r\n  };\r\n\r\n  fetchAspirantsdata = () => {\r\n    firebaseConf\r\n      .database()\r\n      .ref('posts')\r\n      .orderByChild('post')\r\n      .on('value', snapshot => {\r\n        const contestantsPost = [];\r\n        snapshot.forEach(data => {\r\n          contestantsPost.push({\r\n            id: data.val().id,\r\n            post: data.val().post,\r\n            votes: data.val().votes,\r\n            aspirants: Object.entries(\r\n              data.val().aspirants ? data.val().aspirants : []\r\n            ).map(e => Object.assign(e[1], {aspirantKey: e[0]})),\r\n          });\r\n          this.setState({contestantsPost});\r\n        });\r\n         //trying to get the items in the in aspirants \r\n         \r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {activeIndex, contestantsPost, voterId} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Welcome {' ' + this.state.fullName + ', '} Vote wisely!</h1>\r\n        <Container>\r\n          <Accordion styled style={{width: '100%'}}>\r\n            {contestantsPost.map((posts, index) => {\r\n              return (\r\n                <div>\r\n                  <Accordion.Title\r\n                    active={activeIndex === index}\r\n                    index={index}\r\n                    onClick={this.handleClick}\r\n                    key={posts.key}\r\n                  >\r\n                    <Icon name=\"dropdown\" />\r\n                    {(posts.votes && posts.votes[voterId])? <Label color='green' content={posts.post} />: posts.post}\r\n                  </Accordion.Title>\r\n                  <Accordion.Content active={activeIndex === index}>\r\n                    <Card.Group centered stretched>\r\n                      {posts.aspirants.map((item, i) => (\r\n                        <Card style={{width: '200px', height: '20%'}}>\r\n                          <Image\r\n                            src={item.imageUrl ? item.imageUrl.downloadURL : ''}\r\n                            style={{height: '120px'}}\r\n                          />\r\n                          <Card.Content>\r\n                            <Card.Header>\r\n                              <center>\r\n                                {item.lastName + ' ' + item.firstName}\r\n                              </center>\r\n                            </Card.Header>\r\n                          </Card.Content>\r\n                          <Card.Content extra>\r\n                            <center>\r\n                              {!(item.votes && item.votes[voterId]) && (\r\n                                <Button\r\n                                  color=\"green\"\r\n                                  onClick={this.handleVote(\r\n                                    item.prefectId,\r\n                                    item.aspirantKey,\r\n                                    index,\r\n                                    i\r\n                                  )}\r\n                                  disabled={(posts.votes && posts.votes[voterId])}\r\n                                >\r\n                                  Vote\r\n                                </Button>\r\n                              )}\r\n                              {item.votes && item.votes[voterId] && (\r\n                                <Button\r\n                                  color=\"red\"\r\n                                  onClick={this.handleUnvote(\r\n                                    item.prefectId,\r\n                                    item.aspirantKey,\r\n                                    index,\r\n                                    i\r\n                                  )}\r\n                                >\r\n                                  Unvote\r\n                                </Button>\r\n                              )}\r\n                            </center>\r\n                          </Card.Content>\r\n                        </Card>\r\n                      ))}\r\n                    </Card.Group>\r\n                  </Accordion.Content>\r\n                </div>\r\n              );\r\n            })}\r\n          </Accordion>\r\n          <br />\r\n          <div style={{marginLeft:'50%',marginRight:'50%'}}><Form.Field\r\n            style={{paddingLeft: 'auto', paddingRight: 'auto'}}\r\n            control={Button}\r\n            type=\"submit\"\r\n            color=\"blue\"\r\n            onClick={this.handleOpenModal}\r\n          >\r\n            Finish\r\n          </Form.Field></div>\r\n        </Container>\r\n        <div> \r\n          <Modal\r\n            open={this.state.openModal}\r\n            onClose={this.handleCloseModal}\r\n            basic\r\n            size=\"small\"\r\n            style={{minHeight: '100vh'}}\r\n          >\r\n            <Header icon=\"user delete\" content=\"Submission Confirmation\" />\r\n            <Modal.Content>\r\n              <p>Are you sure you want to want to end Voting process</p>\r\n              <h4>Note:You cant change your mind after submitting</h4>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button\r\n                basic\r\n                color=\"red\"\r\n                inverted\r\n                onClick={this.handleCloseDisapprovedModal}\r\n              >\r\n                <Icon name=\"remove\" /> No\r\n              </Button>\r\n              <Button\r\n                color=\"green\"\r\n                onClick={() => this.handleFinish()}\r\n                loading={this.state.isLoading}\r\n              >\r\n                <Icon name=\"checkmark\" /> Yes\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AccordionExampleStandard);\r\n"]},"metadata":{},"sourceType":"module"}